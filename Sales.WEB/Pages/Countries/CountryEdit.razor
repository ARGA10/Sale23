@page "/countries/edit/{Id:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlerService
<h3>Editar País</h3>

@*<CountryForm @ref="countryForm" Country="country" OnValidSubmit="Create" ReturnAction="Return" />*@

@code {
    private Country? country;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var responseHttp = await repository.Get<Country>("/api/countries");
        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/countries");
                return;
            }
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlerService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;

        }
        country = responseHttp.Response;

    }



    //private Country country = new();
    //private CountryForm? countryForm;
    //private async Task Create()
    //{
    //    var httpResponse = await repository.Post("/api/countries", country);
    //    if (httpResponse.Error)
    //    {
    //        var message = await httpResponse.GetErrorMessageAsync();
    //        await sweetAlerService.FireAsync("Error", message);
    //    }
    //    countryForm!.FormPostedSuccessfully = true;
    //    navigationManager.NavigateTo("/countries");
    //}

    //private void Return()
    //{
    //    navigationManager.NavigateTo("/countries");

    //}
}
